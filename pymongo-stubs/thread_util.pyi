from typing import Any, Optional

from pymongo.errors import ExceededMaxWaiters as ExceededMaxWaiters

class Semaphore:
    def __init__(self, value: int = ...) -> None: ...
    def acquire(self, blocking: bool = ..., timeout: Optional[Any] = ...): ...
    __enter__: Any = ...
    def release(self) -> None: ...
    def __exit__(self, t: Any, v: Any, tb: Any) -> None: ...
    @property
    def counter(self): ...

class BoundedSemaphore(Semaphore):
    def __init__(self, value: int = ...) -> None: ...
    def release(self): ...

class DummySemaphore:
    def __init__(self, value: Optional[Any] = ...) -> None: ...
    def acquire(self, blocking: bool = ..., timeout: Optional[Any] = ...): ...
    def release(self) -> None: ...

class MaxWaitersBoundedSemaphore:
    waiter_semaphore: Any = ...
    semaphore: Any = ...
    def __init__(self, semaphore_class: Any, value: int = ..., max_waiters: int = ...) -> None: ...
    def acquire(self, blocking: bool = ..., timeout: Optional[Any] = ...): ...
    def __getattr__(self, name: Any): ...

class MaxWaitersBoundedSemaphoreThread(MaxWaitersBoundedSemaphore):
    def __init__(self, value: int = ..., max_waiters: int = ...) -> None: ...

def create_semaphore(max_size: Any, max_waiters: Any): ...
