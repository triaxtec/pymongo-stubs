from typing import Any, Optional

from pymongo.ismaster import IsMaster as IsMaster
from pymongo.server_type import SERVER_TYPE as SERVER_TYPE

class ServerDescription:
    def __init__(
        self,
        address: Any,
        ismaster: Optional[Any] = ...,
        round_trip_time: Optional[Any] = ...,
        error: Optional[Any] = ...,
    ) -> None: ...
    @property
    def address(self): ...
    @property
    def server_type(self): ...
    @property
    def server_type_name(self): ...
    @property
    def all_hosts(self): ...
    @property
    def tags(self): ...
    @property
    def replica_set_name(self): ...
    @property
    def primary(self): ...
    @property
    def max_bson_size(self): ...
    @property
    def max_message_size(self): ...
    @property
    def max_write_batch_size(self): ...
    @property
    def min_wire_version(self): ...
    @property
    def max_wire_version(self): ...
    @property
    def set_version(self): ...
    @property
    def election_id(self): ...
    @property
    def cluster_time(self): ...
    @property
    def election_tuple(self): ...
    @property
    def me(self): ...
    @property
    def logical_session_timeout_minutes(self): ...
    @property
    def last_write_date(self): ...
    @property
    def last_update_time(self): ...
    @property
    def round_trip_time(self): ...
    @property
    def error(self): ...
    @property
    def is_writable(self): ...
    @property
    def is_readable(self): ...
    @property
    def mongos(self): ...
    @property
    def is_server_type_known(self): ...
    @property
    def retryable_writes_supported(self): ...
    @property
    def retryable_reads_supported(self): ...
